/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package jettyService;

import org.eclipse.jetty.server.Connector;
import org.eclipse.jetty.server.Handler;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.ServerConnector;
import org.eclipse.jetty.server.handler.ContextHandler;
import org.eclipse.jetty.server.handler.ContextHandlerCollection;
import org.eclipse.jetty.server.handler.HandlerCollection;
import org.eclipse.jetty.webapp.WebAppContext;
import java.lang.System.Logger;

/**
 *
 * @author DoD_Admin
 */
public class JettyService {

    // private final static Logger LOGGER = Logger
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

        Server server;
        server = new Server();
        ServerConnector connector = new ServerConnector(server);
        connector.setPort(8081);
        server.setConnectors(new Connector[]{connector});
        Logger logger;


        //create instance of context - WebAppContext()
        //
        // WebAppContext webappContext = new WebAppContext();
        // webappContext.setContextPath("/web");
        // webappContext.setWar("webapps");
        WebAppContext wc = new WebAppContext();
        wc.setContextPath("/map");
        wc.setWar("C:\\temp\\jetty-base\\webapps");

        // WebAppContext webappContext = new WebAppContext();
        //  webappContext.setContextPath(contextPath);

        //Create instance of Context Handler Collection

        ContextHandler contextData = new ContextHandler();
        ContextHandlerCollection contexts = new ContextHandlerCollection();
        contexts.addHandler(wc);

        //context handers are set to server handlers
        HandlerCollection handlers = new HandlerCollection();
        handlers.setHandlers(new Handler[]{contexts});
        server.setHandler(handlers);

        //   WebAppContext wac = new WebAppContext();
        //  wac.setLogEnabled(true);
        try {
            // Start Jetty Web Server
            server.start();
            server.join();

        } catch (Exception ex) {
            System.out.println("TinyServer error with exception\n" + ex);

        }

    }

}
